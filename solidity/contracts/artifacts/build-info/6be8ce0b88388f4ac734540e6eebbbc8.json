{
	"id": "6be8ce0b88388f4ac734540e6eebbbc8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GeekNft.sol": {
				"content": "\npragma solidity 0.8.1;\n\ncontract GeekNft {\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/GeekNft.sol": {
				"GeekNft": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GeekNft.sol\":25:46  contract GeekNft {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GeekNft.sol\":25:46  contract GeekNft {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220926a551069f9fc3b7b8458a5e71882d38f7fa63642b957d058bb2cfd9057a36d64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220926a551069f9fc3b7b8458a5e71882d38f7fa63642b957d058bb2cfd9057a36d64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH11 0x551069F9FC3B7B8458A5E7 XOR DUP3 0xD3 DUP16 PUSH32 0xA63642B957D058BB2CFD9057A36D64736F6C6343000801003300000000000000 ",
							"sourceMap": "25:21:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220926a551069f9fc3b7b8458a5e71882d38f7fa63642b957d058bb2cfd9057a36d64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH11 0x551069F9FC3B7B8458A5E7 XOR DUP3 0xD3 DUP16 PUSH32 0xA63642B957D058BB2CFD9057A36D64736F6C6343000801003300000000000000 ",
							"sourceMap": "25:21:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 46,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220926a551069f9fc3b7b8458a5e71882d38f7fa63642b957d058bb2cfd9057a36d64736f6c63430008010033",
									".code": [
										{
											"begin": 25,
											"end": 46,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 46,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 46,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 46,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 46,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 46,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GeekNft.sol\":\"GeekNft\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GeekNft.sol\":{\"keccak256\":\"0x9626009f47fa9ec52665e5add97c7fa01a08750869acd9961e3fb82b0709f1b6\",\"urls\":[\"bzz-raw://9a7194052d4402ae0b6044912d393f64f663a593f937cd227bfd08417f06576e\",\"dweb:/ipfs/QmfB3bVfcipwTJ4Y4nxors8UkUfcu4hWJ55EAzkuGg92bN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/GeekNft.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/GeekNft.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/GeekNft.sol": {
				"ast": {
					"absolutePath": "contracts/GeekNft.sol",
					"exportedSymbols": {
						"GeekNft": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "1:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "GeekNft",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "25:21:0"
						}
					],
					"src": "1:45:0"
				},
				"id": 0
			}
		}
	}
}